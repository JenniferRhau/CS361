5/3
#Dividing two integers can give a decimal answer.
5%3
5.0/3
#no type cast neccessary
5/3.0
5.2%3
#Can give double remainder
2000.3 ** 200
#Error, becasue product is too big
1.0 + 1.0 - 1.0
1.0 + 1.0e20 - 1.0e20
#The answer is out of range. It is ignored and only 0 it outputted
float(123)
#It is possible to typecast a string of numbers
float('123')
float('123.23')
int(123.23)
int('123.23')
#Error because it can not type cast soo much. String -> float -> int
int(float('123.23'))
#The previous problem will work if you typecast it so python does less work
str(12)
str(12.2)
bool('a')
bool(0)
#thing are considered "empty" in python like [], null, or zero are false.
bool (0.1)
range(5)
#Range tells the, well, the range. 0,1,2,3,4.
# i in range would output whatever the loop is 5 times
type(range(5))
#gives you the type

num = 0
x = 11
while num < 20:
    if x%5 == 0 and x%7==0 and x%11==0:
      print(x)
      num += 1
    x += 1
#PROGRAM outputs the first 20 numbers divisible by 5,7, 11

def is_prime(n):
 print("2")
 print("3")
 k=1 
  
 while k < n:
  num = (6*k)+ 1 
  num2 = (6*k)- 1
  print(num)
  print(num2)
  k +=1
  
is_prime(23)

#Finds all the prime numbers until n

letters = ['J','E','N','N','I','F','E','R']

def element(x):
  for aletter in letters:
    print(aletter)

element(letters)
#PROGRAM a function that prints out a list

letters = ['R','E','F','I','N','N','E','J']

def elementsflip(x):
  for letter in letters[::-1]:
    print(letter)

element(letters)
#A function the prints our a list backwards

letters = ['R','E','F','I','N','N','E','J']

def len(x):
  count = 0
  for letter in letters:
    count = count + 1
  print(count)

len(letters)
#Prints our length of list

a = ['C','H','R','I','S','T','M','A','S']

b=a
b[1] = "x"
print(a)

c = a[:]
c[2] = 'J'
print(a)
#Prints out the list and replaces specific cells of th list

def set_first_elem_to_zero(l):
 l[0] = '0'
 return l
 print(l)
  
l = ['R', 'H','A','U']

set_first_elem_to_zero(l)
print(l)
#Changes b, but since b is pointing to 'a', it also changes 'a'. a[:] dosen't change anyhting bauce there is no beginning or end numvers
#The original list is changed forever

list =[]
lists = [ [1,3],[6,7],[2,8] ]
def print_list(l):
    for i in l:
      for x in i:
        list.append(x)
      
print_list(lists)
print(list)
#Append works similar to pop in a stack. The code goes through a list, whic directs it to go through a smaller list, that then appends the 
#elements of the list

import matplotlib.pyplot as plt
import numpy as np #Makes trig functions available
import random
#import math

X = []
Y = []
for i in range(3):
  X = np.arange(0.01,0.0,2.0)
  Y = (np.sin(X-2)**2)*np.exp(-X**2)
  
fig,axis = plt.subplots()
axis.plot(X,Y, color = 'blue', linewidth = 3)
axis.set(title= 'Line Graph')
fig.savefig("graph.png")
plt.show()

#GRAPH IS NOT BEING SHOWN

def iter(l):
  n=1
  for each in (l):
    n*=each
  return n

print(iter([3,5,2,6,7,9]))

def recur(l):
  if(len(l)==1):
    returnl[0];
  else:
    return [0]*recur(l[1:])
  
  print(recur([3,5,2,6,7,9]))
  
  #iterating through a loop and using recursion gives the same results

def fib(n):
 
  if(n==0):
    return 0
  elif(n==1):
    return 1
  else:
    return fib(n-1)+fib(n-2)
  
print(fib(36))

#UNABLE TO GET FILE 
